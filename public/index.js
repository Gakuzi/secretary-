/**
 * –°–µ–∫—Ä–µ—Ç–∞—Ä—å+ - –ì–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
 * –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –≤–µ–±-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é
 */

import { UIManager } from './components/UIManager.js';
import { ChatService } from './services/ChatService.js';
import { AuthService } from './services/AuthService.js';
import { GeminiService } from './services/GeminiService.js';
import { GoogleCalendarService } from './services/GoogleCalendarService.js';
import { GmailService } from './services/GmailService.js';

/**
 * –ì–ª–∞–≤–Ω—ã–π –∫–ª–∞—Å—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
class SecretaryPlusApp {
    constructor() {
        this.uiManager = null;
        this.chatService = null;
        this.authService = null;
        this.geminiService = null;
        this.calendarService = null;
        this.gmailService = null;
        this.isInitialized = false;
        
        // –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        this.state = {
            isAuthenticated: false,
            currentUser: null,
            currentTheme: 'dark',
            services: {
                gemini: false,
                calendar: false,
                gmail: false
            }
        };
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     */
    async init() {
        try {
            console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –°–µ–∫—Ä–µ—Ç–∞—Ä—å+...');
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏
            this.showLoadingScreen();
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å—ã
            await this.initializeServices();
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º UI
            await this.initializeUI();
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
            await this.checkAuthentication();
            
            // –°–∫—Ä—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏
            this.hideLoadingScreen();
            
            this.isInitialized = true;
            console.log('‚úÖ –°–µ–∫—Ä–µ—Ç–∞—Ä—å+ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);
            this.showErrorScreen(error);
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
     */
    async initializeServices() {
        console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤...');
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º AuthService
        this.authService = new AuthService();
        await this.authService.init();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º GeminiService –µ—Å–ª–∏ –µ—Å—Ç—å API –∫–ª—é—á
        const geminiApiKey = localStorage.getItem('gemini-api-key');
        if (geminiApiKey) {
            try {
                this.geminiService = new GeminiService(geminiApiKey);
                await this.geminiService.init();
                this.state.services.gemini = true;
                console.log('‚úÖ Gemini AI –ø–æ–¥–∫–ª—é—á–µ–Ω');
            } catch (error) {
                console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Gemini AI:', error);
            }
        }
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Google —Å–µ—Ä–≤–∏—Å—ã
        try {
            this.calendarService = new GoogleCalendarService();
            await this.calendarService.init();
            this.state.services.calendar = true;
            console.log('‚úÖ Google Calendar –ø–æ–¥–∫–ª—é—á–µ–Ω');
        } catch (error) {
            console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Google Calendar:', error);
        }
        
        try {
            this.gmailService = new GmailService();
            await this.gmailService.init();
            this.state.services.gmail = true;
            console.log('‚úÖ Gmail –ø–æ–¥–∫–ª—é—á–µ–Ω');
        } catch (error) {
            console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Gmail:', error);
        }
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º ChatService
        this.chatService = new ChatService();
        await this.chatService.init();
        
        console.log('‚úÖ –°–µ—Ä–≤–∏—Å—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
     */
    async initializeUI() {
        console.log('üé® –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI...');
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º UIManager
        this.uiManager = new UIManager();
        await this.uiManager.init();
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ChatService –≤ UIManager
        this.uiManager.setChatService(this.chatService);
        
        console.log('‚úÖ UI –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
     */
    async checkAuthentication() {
        console.log('üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...');
        
        if (this.authService && this.authService.isAuthenticated()) {
            this.state.isAuthenticated = true;
            this.state.currentUser = this.authService.getCurrentUser();
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤
            await this.updateServicesState();
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            if (this.uiManager) {
                this.uiManager.showApp();
                this.uiManager.updateUserInterface();
            }
        } else {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
            if (this.uiManager) {
                this.uiManager.showAuthScreen();
            }
        }
        
        console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
     */
    async updateServicesState() {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º Gemini AI
            if (this.geminiService && this.geminiService.isReady()) {
                this.state.services.gemini = true;
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º Google —Å–µ—Ä–≤–∏—Å—ã
            if (this.calendarService && this.calendarService.isReady()) {
                this.state.services.calendar = true;
            }
            
            if (this.gmailService && this.gmailService.isReady()) {
                this.state.services.gmail = true;
            }
            
            console.log('‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–æ:', this.state.services);
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤:', error);
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏
     */
    showLoadingScreen() {
        const loadingScreen = document.getElementById('loading-screen');
        if (loadingScreen) {
            loadingScreen.classList.remove('hidden');
        }
    }

    /**
     * –°–∫—Ä—ã—Ç—å —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏
     */
    hideLoadingScreen() {
        const loadingScreen = document.getElementById('loading-screen');
        if (loadingScreen) {
            loadingScreen.classList.add('hidden');
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —ç–∫—Ä–∞–Ω –æ—à–∏–±–∫–∏
     */
    showErrorScreen(error) {
        const loadingScreen = document.getElementById('loading-screen');
        if (loadingScreen) {
            loadingScreen.innerHTML = `
                <div class="text-center">
                    <div class="w-20 h-20 bg-red-500 rounded-full flex items-center justify-center mx-auto mb-6">
                        <svg class="w-10 h-10 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                        </svg>
                    </div>
                    <h2 class="text-2xl font-bold text-red-400 mb-2">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h2>
                    <p class="text-red-300 mb-4">–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</p>
                    <p class="text-red-200 text-sm mb-6">${error.message}</p>
                    <button onclick="location.reload()" class="bg-red-600 hover:bg-red-700 text-white font-semibold py-2 px-4 rounded-lg transition-colors">
                        –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
                    </button>
                </div>
            `;
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
     */
    async handleAuthentication(user) {
        try {
            console.log('üîê –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user);
            
            this.state.isAuthenticated = true;
            this.state.currentUser = user;
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤
            await this.updateServicesState();
            
            // –°–∫—Ä—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
            if (this.uiManager) {
                this.uiManager.hideAuthScreen();
                this.uiManager.showApp();
                this.uiManager.updateUserInterface();
            }
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            this.showWelcomeMessage();
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', error);
            this.showNotification('–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏', 'error');
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
     */
    showWelcomeMessage() {
        if (this.uiManager && this.uiManager.getElement('chatArea')) {
            const welcomeMessage = `
                <div class="text-center text-blue-300 animate-fade-in">
                    <div class="w-20 h-20 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center mx-auto mb-6">
                        <svg class="w-10 h-10 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                    </div>
                    <h3 class="text-2xl font-semibold mb-2">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${this.state.currentUser?.name || '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}!</h3>
                    <p class="text-blue-200 mb-4">–Ø - –≤–∞—à AI-–ø–æ–º–æ—â–Ω–∏–∫ –°–µ–∫—Ä–µ—Ç–∞—Ä—å+</p>
                    <p class="text-blue-300 text-sm">–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:</p>
                    <div class="grid grid-cols-2 gap-4 mt-4 text-left max-w-md mx-auto">
                        <div class="flex items-center space-x-2">
                            <div class="w-3 h-3 ${this.state.services.gemini ? 'bg-green-500' : 'bg-gray-400'} rounded-full"></div>
                            <span class="text-sm">Gemini AI</span>
                        </div>
                        <div class="flex items-center space-x-2">
                            <div class="w-3 h-3 ${this.state.services.calendar ? 'bg-green-500' : 'bg-gray-400'} rounded-full"></div>
                            <span class="text-sm">Google Calendar</span>
                        </div>
                        <div class="flex items-center space-x-2">
                            <div class="w-3 h-3 ${this.state.services.gmail ? 'bg-green-500' : 'bg-gray-400'} rounded-full"></div>
                            <span class="text-sm">Gmail</span>
                        </div>
                        <div class="flex items-center space-x-2">
                            <div class="w-3 h-3 bg-green-500 rounded-full"></div>
                            <span class="text-sm">–ß–∞—Ç</span>
                        </div>
                    </div>
                    <p class="text-blue-300 text-sm mt-4">–ù–∞—á–Ω–∏—Ç–µ —Ä–∞–∑–≥–æ–≤–æ—Ä –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –≤—ã—à–µ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π</p>
                </div>
            `;
            
            this.uiManager.getElement('chatArea').innerHTML = welcomeMessage;
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
     */
    showNotification(message, type = 'info') {
        if (this.uiManager) {
            this.uiManager.showNotification(message, type);
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
     */
    async handleLogout() {
        try {
            console.log('üö™ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã...');
            
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            this.state.isAuthenticated = false;
            this.state.currentUser = null;
            this.state.services = {
                gemini: false,
                calendar: false,
                gmail: false
            };
            
            // –û—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
            if (this.chatService) {
                this.chatService.clearHistory();
            }
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
            if (this.uiManager) {
                this.uiManager.hideApp();
                this.uiManager.showAuthScreen();
            }
            
            this.showNotification('–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã', 'success');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã:', error);
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     */
    getAppStatistics() {
        const stats = {
            isInitialized: this.isInitialized,
            isAuthenticated: this.state.isAuthenticated,
            currentUser: this.state.currentUser,
            currentTheme: this.state.currentTheme,
            services: this.state.services,
            chatService: this.chatService ? this.chatService.getStatistics() : null,
            uiManager: this.uiManager ? this.uiManager.isReady() : false,
            authService: this.authService ? this.authService.getAuthStats() : null
        };
        
        return stats;
    }

    /**
     * –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
     */
    toggleTheme() {
        this.state.currentTheme = this.state.currentTheme === 'dark' ? 'light' : 'dark';
        document.documentElement.setAttribute('data-theme', this.state.currentTheme);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
        localStorage.setItem('secretary-plus-theme', this.state.currentTheme);
        
        this.showNotification(`–¢–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞: ${this.state.currentTheme === 'dark' ? '—Ç–µ–º–Ω—É—é' : '—Å–≤–µ—Ç–ª—É—é'}`, 'info');
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π —Ç–µ–º—ã
     */
    loadSavedTheme() {
        const savedTheme = localStorage.getItem('secretary-plus-theme');
        if (savedTheme && (savedTheme === 'dark' || savedTheme === 'light')) {
            this.state.currentTheme = savedTheme;
            document.documentElement.setAttribute('data-theme', savedTheme);
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
     */
    getAppInfo() {
        return {
            name: '–°–µ–∫—Ä–µ—Ç–∞—Ä—å+',
            version: '1.0.0',
            description: '–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –≤–µ–±-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é',
            developer: '–ö–ª–∏–º–æ–≤ –ï–≤–≥–µ–Ω–∏–π',
            technologies: ['Vanilla JavaScript', 'Tailwind CSS', 'Google Gemini AI', 'Google APIs'],
            features: [
                '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è–º–∏',
                '–ê–Ω–∞–ª–∏–∑ –ø–æ—á—Ç—ã',
                '–ü–æ–∏—Å–∫ –ø–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º',
                '–†–∞–±–æ—Ç–∞ —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏',
                'AI-–ø–æ–º–æ—â–Ω–∏–∫'
            ],
            services: this.state.services
        };
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ API –∫–ª—é—á–µ–π
     */
    configureAPIKeys(geminiApiKey = null, googleClientId = null) {
        let updated = false;
        
        if (geminiApiKey) {
            localStorage.setItem('gemini-api-key', geminiApiKey);
            updated = true;
        }
        
        if (googleClientId) {
            localStorage.setItem('google-client-id', googleClientId);
            if (this.authService) {
                this.authService.configureGoogleOAuth(googleClientId);
            }
            updated = true;
        }
        
        if (updated) {
            this.showNotification('API –∫–ª—é—á–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π.', 'success');
        }
        
        return updated;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
     */
    async checkServicesHealth() {
        const health = {
            gemini: false,
            calendar: false,
            gmail: false,
            auth: false
        };
        
        try {
            if (this.geminiService) {
                health.gemini = this.geminiService.isReady();
            }
            
            if (this.calendarService) {
                health.calendar = this.calendarService.isReady();
            }
            
            if (this.gmailService) {
                health.gmail = this.gmailService.isReady();
            }
            
            if (this.authService) {
                health.auth = this.authService.isReady();
            }
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤:', error);
        }
        
        return health;
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
window.SecretaryPlusApp = SecretaryPlusApp;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', async () => {
    try {
        console.log('üåê –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...');
        
        // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        const app = new SecretaryPlusApp();
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Ç–µ–º—É
        app.loadSavedTheme();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        await app.init();
        
        // –î–µ–ª–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã–º –≥–ª–æ–±–∞–ª—å–Ω–æ
        window.app = app;
        
        console.log('üéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –°–µ–∫—Ä–µ—Ç–∞—Ä—å+ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ!');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏
        console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', app.getAppStatistics());
        console.log('‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏:', app.getAppInfo());
        
    } catch (error) {
        console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫—É—é –æ—à–∏–±–∫—É
        document.body.innerHTML = `
            <div class="min-h-screen bg-red-900 flex items-center justify-center p-4">
                <div class="text-center text-white">
                    <h1 class="text-4xl font-bold mb-4">–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞</h1>
                    <p class="text-xl mb-6">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –°–µ–∫—Ä–µ—Ç–∞—Ä—å+</p>
                    <p class="text-red-200 mb-8">${error.message}</p>
                    <button onclick="location.reload()" class="bg-red-600 hover:bg-red-700 text-white font-semibold py-3 px-6 rounded-lg transition-colors">
                        –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
                    </button>
                </div>
            </div>
        `;
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –Ω–∞ —É—Ä–æ–≤–Ω–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
window.addEventListener('error', (event) => {
    console.error('üí• –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', event.error);
});

window.addEventListener('unhandledrejection', (event) => {
    console.error('üí• –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø—Ä–æ–º–∏—Å–∞:', event.reason);
});

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –º–æ–¥—É–ª–µ–π
export { SecretaryPlusApp }; 